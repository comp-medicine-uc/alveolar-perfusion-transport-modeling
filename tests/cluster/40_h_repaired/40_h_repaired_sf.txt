Process 0: Solving linear variational problem.
Process 3: Solving linear variational problem.
Process 4: Solving linear variational problem.
Process 1: Solving linear variational problem.
Process 2: Solving linear variational problem.
Process 1: No Jacobian form specified for nonlinear variational problem.
Process 1: Differentiating residual form F to obtain Jacobian J = F'.
Process 0: No Jacobian form specified for nonlinear variational problem.
Process 0: Differentiating residual form F to obtain Jacobian J = F'.
Process 2: No Jacobian form specified for nonlinear variational problem.
Process 2: Differentiating residual form F to obtain Jacobian J = F'.
Process 4: No Jacobian form specified for nonlinear variational problem.
Process 4: Differentiating residual form F to obtain Jacobian J = F'.
Process 3: No Jacobian form specified for nonlinear variational problem.
Process 3: Differentiating residual form F to obtain Jacobian J = F'.
Process 0: Solving nonlinear variational problem.
Process 1: Solving nonlinear variational problem.
Process 2: Solving nonlinear variational problem.
Process 4: Solving nonlinear variational problem.
Process 3: Solving nonlinear variational problem.
  Process 0: Newton iteration 0: r (abs) = 3.988e+07 (tol = 1.000e-08) r (rel) = 1.000e+00 (tol = 1.000e-08)
  Process 0: Newton iteration 1: r (abs) = 3.990e-08 (tol = 1.000e-08) r (rel) = 1.000e-15 (tol = 1.000e-08)
  Process 0: Newton solver finished in 1 iterations and 1 linear solver iterations.
Process 2: No Jacobian form specified for nonlinear variational problem.
Process 2: Differentiating residual form F to obtain Jacobian J = F'.
Process 4: No Jacobian form specified for nonlinear variational problem.
Process 4: Differentiating residual form F to obtain Jacobian J = F'.Process 1: No Jacobian form specified for nonlinear variational problem.

Process 1: Differentiating residual form F to obtain Jacobian J = F'.
Process 0: No Jacobian form specified for nonlinear variational problem.
Process 0: Differentiating residual form F to obtain Jacobian J = F'.
Process 3: No Jacobian form specified for nonlinear variational problem.
Process 3: Differentiating residual form F to obtain Jacobian J = F'.
Process 0: Solving nonlinear variational problem.
Process 2: Solving nonlinear variational problem.
Process 3: Solving nonlinear variational problem.
Process 1: Solving nonlinear variational problem.
Process 4: Solving nonlinear variational problem.
  Process 0: Newton iteration 0: r (abs) = 1.345e+09 (tol = 1.000e-08) r (rel) = 1.000e+00 (tol = 1.000e-08)
  Process 0: Newton iteration 1: r (abs) = 2.327e+05 (tol = 1.000e-08) r (rel) = 1.730e-04 (tol = 1.000e-08)
  Process 0: Newton iteration 2: r (abs) = 8.152e+00 (tol = 1.000e-08) r (rel) = 6.060e-09 (tol = 1.000e-08)
  Process 0: Newton solver finished in 2 iterations and 18 linear solver iterations.
Process 4: Solving linear variational problem.Process 2: Solving linear variational problem.
Process 3: Solving linear variational problem.

Process 0: Solving linear variational problem.
Process 1: Solving linear variational problem.
Process 2: No Jacobian form specified for nonlinear variational problem.
Process 0: No Jacobian form specified for nonlinear variational problem.
Process 0: Differentiating residual form F to obtain Jacobian J = F'.
Process 2: Differentiating residual form F to obtain Jacobian J = F'.
Process 3: No Jacobian form specified for nonlinear variational problem.
Process 3: Differentiating residual form F to obtain Jacobian J = F'.
Process 1: No Jacobian form specified for nonlinear variational problem.
Process 1: Differentiating residual form F to obtain Jacobian J = F'.
Process 4: No Jacobian form specified for nonlinear variational problem.
Process 4: Differentiating residual form F to obtain Jacobian J = F'.
Process 4: Solving nonlinear variational problem.
Process 2: Solving nonlinear variational problem.
Process 3: Solving nonlinear variational problem.
Process 0: Solving nonlinear variational problem.
Process 1: Solving nonlinear variational problem.
  Process 0: Newton iteration 0: r (abs) = 1.708e+05 (tol = 1.000e-08) r (rel) = 1.000e+00 (tol = 1.000e-08)
  Process 0: Newton iteration 1: r (abs) = 3.264e+07 (tol = 1.000e-08) r (rel) = 1.911e+02 (tol = 1.000e-08)
  Process 0: Newton iteration 2: r (abs) = 4.985e+07 (tol = 1.000e-08) r (rel) = 2.919e+02 (tol = 1.000e-08)
  Process 0: Newton iteration 3: r (abs) = 1.993e+07 (tol = 1.000e-08) r (rel) = 1.167e+02 (tol = 1.000e-08)
  Process 0: Newton iteration 4: r (abs) = 5.722e+07 (tol = 1.000e-08) r (rel) = 3.350e+02 (tol = 1.000e-08)
  Process 0: Newton iteration 5: r (abs) = 4.616e+07 (tol = 1.000e-08) r (rel) = 2.703e+02 (tol = 1.000e-08)
  Process 0: Newton iteration 6: r (abs) = 4.021e+08 (tol = 1.000e-08) r (rel) = 2.354e+03 (tol = 1.000e-08)
  Process 0: Newton iteration 7: r (abs) = 1.008e+08 (tol = 1.000e-08) r (rel) = 5.902e+02 (tol = 1.000e-08)
  Process 0: Newton iteration 8: r (abs) = 1.081e+09 (tol = 1.000e-08) r (rel) = 6.329e+03 (tol = 1.000e-08)
  Process 0: Newton iteration 9: r (abs) = 1.272e+09 (tol = 1.000e-08) r (rel) = 7.449e+03 (tol = 1.000e-08)
  Process 0: Newton iteration 10: r (abs) = 1.328e+10 (tol = 1.000e-08) r (rel) = 7.774e+04 (tol = 1.000e-08)
  Process 0: Newton iteration 11: r (abs) = 3.449e+09 (tol = 1.000e-08) r (rel) = 2.019e+04 (tol = 1.000e-08)
  Process 0: Newton iteration 12: r (abs) = 2.927e+11 (tol = 1.000e-08) r (rel) = 1.714e+06 (tol = 1.000e-08)
  Process 0: Newton iteration 13: r (abs) = 7.494e+10 (tol = 1.000e-08) r (rel) = 4.388e+05 (tol = 1.000e-08)
  Process 0: Newton iteration 14: r (abs) = 8.754e+10 (tol = 1.000e-08) r (rel) = 5.126e+05 (tol = 1.000e-08)
  Process 0: Newton iteration 15: r (abs) = 1.095e+14 (tol = 1.000e-08) r (rel) = 6.412e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 16: r (abs) = 2.738e+13 (tol = 1.000e-08) r (rel) = 1.603e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 17: r (abs) = 7.288e+12 (tol = 1.000e-08) r (rel) = 4.268e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 18: r (abs) = 6.834e+12 (tol = 1.000e-08) r (rel) = 4.002e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 19: r (abs) = 7.136e+12 (tol = 1.000e-08) r (rel) = 4.178e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 20: r (abs) = 8.330e+15 (tol = 1.000e-08) r (rel) = 4.878e+10 (tol = 1.000e-08)
  Process 0: Newton iteration 21: r (abs) = 2.120e+15 (tol = 1.000e-08) r (rel) = 1.242e+10 (tol = 1.000e-08)
  Process 0: Newton iteration 22: r (abs) = 5.307e+14 (tol = 1.000e-08) r (rel) = 3.108e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 23: r (abs) = 2.128e+14 (tol = 1.000e-08) r (rel) = 1.246e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 24: r (abs) = 9.942e+13 (tol = 1.000e-08) r (rel) = 5.821e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 25: r (abs) = 1.766e+14 (tol = 1.000e-08) r (rel) = 1.034e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 26: r (abs) = 4.385e+13 (tol = 1.000e-08) r (rel) = 2.568e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 27: r (abs) = 4.048e+13 (tol = 1.000e-08) r (rel) = 2.370e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 28: r (abs) = 6.180e+13 (tol = 1.000e-08) r (rel) = 3.619e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 29: r (abs) = 1.554e+13 (tol = 1.000e-08) r (rel) = 9.101e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 30: r (abs) = 8.248e+14 (tol = 1.000e-08) r (rel) = 4.830e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 31: r (abs) = 2.059e+14 (tol = 1.000e-08) r (rel) = 1.206e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 32: r (abs) = 8.297e+14 (tol = 1.000e-08) r (rel) = 4.858e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 33: r (abs) = 2.073e+14 (tol = 1.000e-08) r (rel) = 1.214e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 34: r (abs) = 6.862e+13 (tol = 1.000e-08) r (rel) = 4.018e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 35: r (abs) = 6.883e+14 (tol = 1.000e-08) r (rel) = 4.030e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 36: r (abs) = 1.716e+14 (tol = 1.000e-08) r (rel) = 1.005e+09 (tol = 1.000e-08)
  Process 0: Newton iteration 37: r (abs) = 4.297e+13 (tol = 1.000e-08) r (rel) = 2.516e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 38: r (abs) = 3.763e+13 (tol = 1.000e-08) r (rel) = 2.203e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 39: r (abs) = 1.339e+13 (tol = 1.000e-08) r (rel) = 7.843e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 40: r (abs) = 4.194e+12 (tol = 1.000e-08) r (rel) = 2.456e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 41: r (abs) = 1.618e+14 (tol = 1.000e-08) r (rel) = 9.477e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 42: r (abs) = 4.035e+13 (tol = 1.000e-08) r (rel) = 2.363e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 43: r (abs) = 2.538e+13 (tol = 1.000e-08) r (rel) = 1.486e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 44: r (abs) = 6.436e+12 (tol = 1.000e-08) r (rel) = 3.769e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 45: r (abs) = 1.746e+12 (tol = 1.000e-08) r (rel) = 1.022e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 46: r (abs) = 2.162e+12 (tol = 1.000e-08) r (rel) = 1.266e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 47: r (abs) = 5.021e+12 (tol = 1.000e-08) r (rel) = 2.940e+07 (tol = 1.000e-08)
  Process 0: Newton iteration 48: r (abs) = 1.784e+13 (tol = 1.000e-08) r (rel) = 1.045e+08 (tol = 1.000e-08)
  Process 0: Newton iteration 49: r (abs) = 1.234e+13 (tol = 1.000e-08) r (rel) = 7.227e+07 (tol = 1.000e-08)
Relative path:  /mnt/biherrera/alveolar-perfusion-transport-modeling
Imported src files
Starting...
Current (slow) model inlet velocity u_in = 0.2
Model initialised
Mesh imported
Coordinates have shape  (8120, 3)
Mesh imported
Starting slow (P) simulation with inlet velocity u_in 0.2

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Slow (P) simulation done
Starting slow (T) simulation
Slow u_in value = 0.2

 ############## (LT) and (T) problem simulation ############
No solver selected.
Finished (linear) slow guess generation
Started nonlinear slow solution

 ############## (LT) and (T) problem simulation ############
began sim_t, with solver =  bicgstab  and preconditioner =  default
Solving with solver = bicgstab and preconditioner = default.
Finished nonlinear slow solution
%%%%%%%%%%%%%%%%%%%%%%%%
Starting fast simulation
Current (fast) model inlet velocity u_in = 200
Starting fast (P) simulation

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Fast (P) simulation done with inlet velocity u_in = {str(model.params['u_in'])}
Starting fast (T) simulation without linear guess, with guess from slow solution.
Current (fast) model inlet velocity u_in = 200

 ############## (LT) and (T) problem simulation ############
No solver selected.
Traceback (most recent call last):
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/tests/cluster/40_h_repaired/40_h_repaired_main.py", line 73, in <module>
    solution = model.sim_t(hb=True, save=True, guess=slowsolution)
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/src/model.py", line 471, in sim_t
Relative path:  /mnt/biherrera/alveolar-perfusion-transport-modeling
Imported src files
Starting...
Current (slow) model inlet velocity u_in = 0.2
Model initialised
Mesh imported
Coordinates have shape  (7967, 3)
Mesh imported
Starting slow (P) simulation with inlet velocity u_in 0.2

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Slow (P) simulation done
Starting slow (T) simulation
Slow u_in value = 0.2

 ############## (LT) and (T) problem simulation ############
No solver selected.
Finished (linear) slow guess generation
Started nonlinear slow solution

 ############## (LT) and (T) problem simulation ############
began sim_t, with solver =  bicgstab  and preconditioner =  default
Solving with solver = bicgstab and preconditioner = default.
Finished nonlinear slow solution
%%%%%%%%%%%%%%%%%%%%%%%%
Starting fast simulation
Current (fast) model inlet velocity u_in = 200
Starting fast (P) simulation

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Fast (P) simulation done with inlet velocity u_in = {str(model.params['u_in'])}
Starting fast (T) simulation without linear guess, with guess from slow solution.
Current (fast) model inlet velocity u_in = 200

 ############## (LT) and (T) problem simulation ############
No solver selected.
Traceback (most recent call last):
    solve(
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 220, in solve
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/tests/cluster/40_h_repaired/40_h_repaired_main.py", line 73, in <module>
Relative path:  /mnt/biherrera/alveolar-perfusion-transport-modeling
Imported src files
Starting...
Current (slow) model inlet velocity u_in = 0.2
Model initialised
Mesh imported
Coordinates have shape  (8104, 3)
Mesh imported
Starting slow (P) simulation with inlet velocity u_in 0.2

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Slow (P) simulation done
Starting slow (T) simulation
Slow u_in value = 0.2

 ############## (LT) and (T) problem simulation ############
No solver selected.
Finished (linear) slow guess generation
Started nonlinear slow solution

 ############## (LT) and (T) problem simulation ############
began sim_t, with solver =  bicgstab  and preconditioner =  default
Solving with solver = bicgstab and preconditioner = default.
Finished nonlinear slow solution
%%%%%%%%%%%%%%%%%%%%%%%%
Starting fast simulation
Current (fast) model inlet velocity u_in = 200
Starting fast (P) simulation

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Fast (P) simulation done with inlet velocity u_in = {str(model.params['u_in'])}
Starting fast (T) simulation without linear guess, with guess from slow solution.
Current (fast) model inlet velocity u_in = 200

 ############## (LT) and (T) problem simulation ############
No solver selected.
Traceback (most recent call last):
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/tests/cluster/40_h_repaired/40_h_repaired_main.py", line 73, in <module>
    solution = model.sim_t(hb=True, save=True, guess=slowsolution)
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/src/model.py", line 471, in sim_t
    solution = model.sim_t(hb=True, save=True, guess=slowsolution)
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/src/model.py", line 471, in sim_t
    solve(
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 220, in solve
    _solve_varproblem(*args, **kwargs)
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 266, in _solve_varproblem
    solve(
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 220, in solve
Relative path:  /mnt/biherrera/alveolar-perfusion-transport-modeling
Imported src files
Starting...
Current (slow) model inlet velocity u_in = 0.2
Model initialised
Mesh imported
Coordinates have shape  (7977, 3)
Mesh imported
Starting slow (P) simulation with inlet velocity u_in 0.2

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Slow (P) simulation done
Starting slow (T) simulation
Slow u_in value = 0.2

 ############## (LT) and (T) problem simulation ############
No solver selected.
Finished (linear) slow guess generation
Started nonlinear slow solution

 ############## (LT) and (T) problem simulation ############
began sim_t, with solver =  bicgstab  and preconditioner =  default
Solving with solver = bicgstab and preconditioner = default.
Finished nonlinear slow solution
%%%%%%%%%%%%%%%%%%%%%%%%
Starting fast simulation
Current (fast) model inlet velocity u_in = 200
Starting fast (P) simulation

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Fast (P) simulation done with inlet velocity u_in = {str(model.params['u_in'])}
Starting fast (T) simulation without linear guess, with guess from slow solution.
Current (fast) model inlet velocity u_in = 200

 ############## (LT) and (T) problem simulation ############
No solver selected.
Traceback (most recent call last):
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/tests/cluster/40_h_repaired/40_h_repaired_main.py", line 73, in <module>
    _solve_varproblem(*args, **kwargs)
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 266, in _solve_varproblem
    solver.solve()
RuntimeError: 

*** -------------------------------------------------------------------------
*** DOLFIN encountered an error. If you are not able to resolve this issue
*** using the information listed below, you can ask for help at
***
***     fenics-support@googlegroups.com
***
*** Remember to include the error message listed below and, if possible,
*** include a *minimal* running example to reproduce the error.
***
*** -------------------------------------------------------------------------
*** Error:   Unable to solve nonlinear system with NewtonSolver.
*** Reason:  Newton solver did not converge because maximum number of iterations reached.
*** Where:   This error was encountered inside NewtonSolver.cpp.
*** Process: 4
*** 
*** DOLFIN version: 2019.1.0
*** Git changeset:  ba376b6aebd7a9bc089be46b50bdd9f5c548fb91
*** -------------------------------------------------------------------------

    solution = model.sim_t(hb=True, save=True, guess=slowsolution)
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/src/model.py", line 471, in sim_t
    solve(
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 220, in solve
  Process 0: Newton iteration 50: r (abs) = 3.275e+12 (tol = 1.000e-08) r (rel) = 1.918e+07 (tol = 1.000e-08)
Relative path:  /mnt/biherrera/alveolar-perfusion-transport-modeling
Imported src files
Starting...
Current (slow) model inlet velocity u_in = 0.2
Model initialised
Mesh imported
Coordinates have shape  (7796, 3)
Mesh imported
Starting slow (P) simulation with inlet velocity u_in 0.2

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Slow (P) simulation done
Starting slow (T) simulation
Slow u_in value = 0.2

 ############## (LT) and (T) problem simulation ############
No solver selected.
Finished (linear) slow guess generation
Started nonlinear slow solution

 ############## (LT) and (T) problem simulation ############
began sim_t, with solver =  bicgstab  and preconditioner =  default
Solving with solver = bicgstab and preconditioner = default.
Finished nonlinear slow solution
%%%%%%%%%%%%%%%%%%%%%%%%
Starting fast simulation
Current (fast) model inlet velocity u_in = 200
Starting fast (P) simulation

 ############## (P) problem simulation ############
Instancing boundaries
gamma_in.dir_min =  0.099
gamma_in.dir_max =  39.894
gamma_out.dir_min =  0.099
gamma_out.dir_max =  39.894
gamma_air.dir_min_y =  0.095
gamma_air.dir_max_y =  39.896
gamma_air.dir_min_z =  0.105
gamma_air.dir_max_z =  39.892
boundaries instanced
self.f_dim = 2
self.vecf_dim = 1
P problem solved
u problem solved
Saving solutions
saved
Fast (P) simulation done with inlet velocity u_in = {str(model.params['u_in'])}
Starting fast (T) simulation without linear guess, with guess from slow solution.
Current (fast) model inlet velocity u_in = 200

 ############## (LT) and (T) problem simulation ############
No solver selected.
Traceback (most recent call last):
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/tests/cluster/40_h_repaired/40_h_repaired_main.py", line 73, in <module>
    _solve_varproblem(*args, **kwargs)
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 266, in _solve_varproblem
    solution = model.sim_t(hb=True, save=True, guess=slowsolution)
  File "/mnt/biherrera/alveolar-perfusion-transport-modeling/src/model.py", line 471, in sim_t
    _solve_varproblem(*args, **kwargs)
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 266, in _solve_varproblem
    solve(
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 220, in solve
    solver.solve()
RuntimeError: 

*** -------------------------------------------------------------------------
*** DOLFIN encountered an error. If you are not able to resolve this issue
*** using the information listed below, you can ask for help at
***
***     fenics-support@googlegroups.com
***
*** Remember to include the error message listed below and, if possible,
*** include a *minimal* running example to reproduce the error.
***
*** -------------------------------------------------------------------------
*** Error:   Unable to solve nonlinear system with NewtonSolver.
*** Reason:  Newton solver did not converge because maximum number of iterations reached.
*** Where:   This error was encountered inside NewtonSolver.cpp.
*** Process: 2
*** 
*** DOLFIN version: 2019.1.0
*** Git changeset:  ba376b6aebd7a9bc089be46b50bdd9f5c548fb91
*** -------------------------------------------------------------------------

    solver.solve()
RuntimeError: 

*** -------------------------------------------------------------------------
*** DOLFIN encountered an error. If you are not able to resolve this issue
*** using the information listed below, you can ask for help at
***
***     fenics-support@googlegroups.com
***
*** Remember to include the error message listed below and, if possible,
*** include a *minimal* running example to reproduce the error.
***
*** -------------------------------------------------------------------------
*** Error:   Unable to solve nonlinear system with NewtonSolver.
*** Reason:  Newton solver did not converge because maximum number of iterations reached.
*** Where:   This error was encountered inside NewtonSolver.cpp.
*** Process: 1
*** 
*** DOLFIN version: 2019.1.0
*** Git changeset:  ba376b6aebd7a9bc089be46b50bdd9f5c548fb91
*** -------------------------------------------------------------------------

    solver.solve()
RuntimeError: 

*** -------------------------------------------------------------------------
*** DOLFIN encountered an error. If you are not able to resolve this issue
*** using the information listed below, you can ask for help at
***
***     fenics-support@googlegroups.com
***
*** Remember to include the error message listed below and, if possible,
*** include a *minimal* running example to reproduce the error.
***
*** -------------------------------------------------------------------------
*** Error:   Unable to solve nonlinear system with NewtonSolver.
*** Reason:  Newton solver did not converge because maximum number of iterations reached.
*** Where:   This error was encountered inside NewtonSolver.cpp.
*** Process: 3
*** 
*** DOLFIN version: 2019.1.0
*** Git changeset:  ba376b6aebd7a9bc089be46b50bdd9f5c548fb91
*** -------------------------------------------------------------------------

    _solve_varproblem(*args, **kwargs)
  File "/home/biherrera/miniconda3/lib/python3.9/site-packages/dolfin/fem/solving.py", line 266, in _solve_varproblem
    solver.solve()
RuntimeError: 

*** -------------------------------------------------------------------------
*** DOLFIN encountered an error. If you are not able to resolve this issue
*** using the information listed below, you can ask for help at
***
***     fenics-support@googlegroups.com
***
*** Remember to include the error message listed below and, if possible,
*** include a *minimal* running example to reproduce the error.
***
*** -------------------------------------------------------------------------
*** Error:   Unable to solve nonlinear system with NewtonSolver.
*** Reason:  Newton solver did not converge because maximum number of iterations reached.
*** Where:   This error was encountered inside NewtonSolver.cpp.
*** Process: 0
*** 
*** DOLFIN version: 2019.1.0
*** Git changeset:  ba376b6aebd7a9bc089be46b50bdd9f5c548fb91
*** -------------------------------------------------------------------------

